{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{LineChart,Line,XAxis,YAxis,Tooltip,Legend,CartesianGrid}from\"recharts\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tickers]=useState([\"AAPL\",\"SPY\",\"TSLA\"]);const[selectedTicker,setSelectedTicker]=useState(\"AAPL\");const[stockData,setStockData]=useState([]);const[signals,setSignals]=useState({movingAverage:false,rsi:false,bollingerBands:false});useEffect(()=>{axios.get(`https://your-backend.com/stocks/${selectedTicker}`).then(response=>setStockData(response.data)).catch(error=>console.error(error));},[selectedTicker]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Trading Strategy Simulator\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Select Ticker:\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedTicker,onChange:e=>setSelectedTicker(e.target.value),children:tickers.map(ticker=>/*#__PURE__*/_jsx(\"option\",{value:ticker,children:ticker},ticker))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select Trading Signals\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:signals.movingAverage,onChange:()=>setSignals({...signals,movingAverage:!signals.movingAverage})}),\"Moving Averages\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:signals.rsi,onChange:()=>setSignals({...signals,rsi:!signals.rsi})}),\"RSI Indicator\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:signals.bollingerBands,onChange:()=>setSignals({...signals,bollingerBands:!signals.bollingerBands})}),\"Bollinger Bands\"]}),/*#__PURE__*/_jsxs(LineChart,{width:800,height:400,data:stockData,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#ccc\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"close\",stroke:\"blue\",name:\"Stock Price\"})]})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","Tooltip","Legend","CartesianGrid","jsx","_jsx","jsxs","_jsxs","App","tickers","selectedTicker","setSelectedTicker","stockData","setStockData","signals","setSignals","movingAverage","rsi","bollingerBands","get","then","response","data","catch","error","console","children","value","onChange","e","target","map","ticker","type","checked","width","height","dataKey","stroke","name"],"sources":["C:/Users/Sammy/Documents/Portfolio Projects/FinancialModelling/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\r\n\r\nconst App = () => {\r\n  const [tickers] = useState([\"AAPL\", \"SPY\", \"TSLA\"]);\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AAPL\");\r\n  const [stockData, setStockData] = useState([]);\r\n  const [signals, setSignals] = useState({\r\n    movingAverage: false,\r\n    rsi: false,\r\n    bollingerBands: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://your-backend.com/stocks/${selectedTicker}`)\r\n      .then((response) => setStockData(response.data))\r\n      .catch((error) => console.error(error));\r\n  }, [selectedTicker]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Trading Strategy Simulator</h2>\r\n      \r\n      <label>Select Ticker:</label>\r\n      <select value={selectedTicker} onChange={(e) => setSelectedTicker(e.target.value)}>\r\n        {tickers.map(ticker => <option key={ticker} value={ticker}>{ticker}</option>)}\r\n      </select>\r\n\r\n      <h3>Select Trading Signals</h3>\r\n      <label>\r\n        <input type=\"checkbox\" checked={signals.movingAverage} \r\n          onChange={() => setSignals({...signals, movingAverage: !signals.movingAverage})} />\r\n        Moving Averages\r\n      </label>\r\n      <label>\r\n        <input type=\"checkbox\" checked={signals.rsi} \r\n          onChange={() => setSignals({...signals, rsi: !signals.rsi})} />\r\n        RSI Indicator\r\n      </label>\r\n      <label>\r\n        <input type=\"checkbox\" checked={signals.bollingerBands} \r\n          onChange={() => setSignals({...signals, bollingerBands: !signals.bollingerBands})} />\r\n        Bollinger Bands\r\n      </label>\r\n\r\n      <LineChart width={800} height={400} data={stockData}>\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <CartesianGrid stroke=\"#ccc\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"blue\" name=\"Stock Price\" />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}